@use 'sass:math';

@function fluid(
  $min-value,
  $max-value,
  $min-breakpoint,
  $max-breakpoint,
  $unit: vw
) {
  $slope: math.div($max-value - $min-value, $max-breakpoint - $min-breakpoint);
  $slope-to-unit: $slope * 100;

  $intercept: round(rem($min-value - $slope * $min-breakpoint), 2);
  $min-value: round(rem($min-value), 2);
  $max-value: round(rem($max-value), 2);

  @return clamp(#{$min-value}, #{$slope-to-unit}#{$unit} + #{$intercept}, #{$max-value});
}

@function em(
  $value,
  $default: 16
) {
  @if (math.is-unitless($value)) {
    $value: $value * 1px;
  }

  @if (math.is-unitless($default)) {
    $default: $default * 1px;
  }

  @return math.div($value, $default) * 1em;
}

@function rem(
  $value,
  $default: 16
) {
  @if (math.is-unitless($value)) {
    $value: $value * 1px;
  }

  @if (math.is-unitless($default)) {
    $default: $default * 1px;
  }

  @return math.div($value, $default) * 1rem;
}

@function round(
  $value,
  $decimals: 0
) {
  $n: 1;

  @if $decimals > 0 {
    @for $i from 1 through $decimals {
      $n: $n * 10;
    }
  }

  @return math.div(math.round($value * $n), $n);
}
